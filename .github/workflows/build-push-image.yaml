name: Build and Push Docker image

on:
    push:
        branches: [ main ]

jobs:
  build-and-push-image:
    name: Build and Push Docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Get Registry credentials
        id: acr
        run: |
          echo "::set-output name=acr_username::$(az acr credential show --name pecarmoregistry --query username --output tsv)"
          echo "::set-output name=acr_password::$(az acr credential show --name pecarmoregistry --query passwords[0].value --output tsv)"

      - name: Login to Docker Registry
        uses: azure/docker-login@v2
        with:
          login-server: pecarmoregistry.azurecr.io
          username: ${{ steps.acr.outputs.acr_username }}
          password: ${{ steps.acr.outputs.acr_password }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get repository name
        id: repo
        run: echo "::set-output name=repo::$(basename ${{ github.repository }})"
      
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y.%m.%d')"
      
      - name: Build and push Docker image with 'latest' tag
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: pecarmoregistry.azurecr.io/${{ steps.repo.outputs.repo }}:latest
      
      - name: Build and push Docker image with CalVer tag
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: pecarmoregistry.azurecr.io/${{ steps.repo.outputs.repo }}:${{ steps.date.outputs.date }}

  apply-deployment:
    name: Apply deployment
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get repository name
        id: repo
        run: echo "::set-output name=repo::$(basename ${{ github.repository }})"
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Apply deployment
        run: |
          DB_ENDPOINT_ENCODED=$(echo -n "${{ secrets.DB_ENDPOINT }}" | base64 -w 0)
          DB_USERNAME_ENCODED=$(echo -n "${{ secrets.DB_USERNAME }}" | base64 -w 0)
          DB_NAME_ENCODED=$(echo -n "${{ secrets.DB_NAME }}" | base64 -w 0)
          DB_PASSWORD_ENCODED=$(echo -n "${{ secrets.DB_PASSWORD }}" | base64 -w 0)
          DUCKDNS_TOKEN_ENCODED=$(echo -n "${{ secrets.DUCKDNS_TOKEN }}" | base64 -w 0)
          
          sed -i "s#DB_ENDPOINT_SECRET_VALUE#${DB_ENDPOINT_ENCODED}#g" deployment.yaml
          sed -i "s#DB_USERNAME_SECRET_VALUE#${DB_USERNAME_ENCODED}#g" deployment.yaml
          sed -i "s#DB_PASSWORD_SECRET_VALUE#${DB_PASSWORD_ENCODED}#g" deployment.yaml
          sed -i "s#DB_NAME_SECRET_VALUE#${DB_NAME_ENCODED}#g" deployment.yaml
          sed -i "s#DUCKDNS_TOKEN_SECRET_VALUE#${DUCKDNS_TOKEN_ENCODED}#g" deployment.yaml
          
          az aks get-credentials --resource-group infra-rg-neu --name pecarmoaks
          kubectl apply -f deployment.yaml
          kubectl rollout restart deployment/${{ steps.repo.outputs.repo }}-deployment